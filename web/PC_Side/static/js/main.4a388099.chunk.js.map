{"version":3,"sources":["logo.svg","Components/FilterTime.js","App.js","reportWebVitals.js","index.js"],"names":["FilterTime","format","time","_classCallCheck","this","formats","isDate","$test","$day","_init","_createClass","key","value","parsing","transform","Date","formatType","Object","prototype","toString","call","console","log","getMonth","Math","pow","length","isNaN","Number","test","Error","params","getDate","getHours","getMinutes","getSeconds","floor","getMilliseconds","App","React","useEffect","ooooo","then","res","Promise","resolve","reject","setTimeout","_jsxs","className","children","_jsx","BrowserRouter","NavLink","to","Routes","Route","path","element","onClick","fetch","method","credentials","json","data","err","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,I,oBCiBMA,EAAU,WAO3B,SAAAA,EAAYC,EAAQC,GAAMC,YAAA,KAAAH,GACtBI,KAAKC,QAAUJ,GAAU,GACzBG,KAAKF,KAAOA,GAAQ,GACpBE,KAAKE,QAAS,EACdF,KAAKG,MAAQ,KACbH,KAAKI,KAAO,KAEZJ,KAAKK,QA0KR,OAxKAC,YAAAV,EAAA,EAAAW,IAAA,QAAAC,MACD,WACQR,KAAKC,UAAYD,KAAKF,KACtBE,KAAKS,UACET,KAAKC,SAAWD,KAAKF,KACxBE,KAAKU,YAETV,KAAKI,KAAO,IAAIO,OAIxB,CAAAJ,IAAA,UAAAC,MAQA,WACI,IAAII,EAAaC,OAAOC,UAAUC,SAASC,KAAKhB,KAAKC,SAClC,kBAAfW,GACAZ,KAAKI,KAAOJ,KAAKC,QACjBgB,QAAQC,IAAI,4CAAelB,KAAKC,QAAQkB,WAAYnB,KAAKI,OACnC,oBAAfQ,EACPZ,KAAKI,KAAO,IAAIO,KAAKX,KAAKC,QAAUmB,KAAKC,IAAI,GAAI,GAAKrB,KAAKC,QAAQc,WAAWO,QAAU,EAAI,GAAKtB,KAAKC,QAAQc,WAAWO,OAAS,IAC5G,oBAAfV,EACHW,MAAMC,OAAOxB,KAAKC,UACd,OAAOwB,KAAKzB,KAAKC,UAAU,OAAOwB,KAAKzB,KAAKC,UAAU,OAAOwB,KAAKzB,KAAKC,UAAU,OAAOwB,KAAKzB,KAAKC,SAClGD,KAAKI,KAA2C,iBAApC,IAAIO,KAAKX,KAAKC,SAASc,WAA6B,IAAIJ,KAAKX,KAAKC,SAAU,IAAIU,KAE5FX,KAAKI,KAAO,IAAIO,KAGpBX,KAAKI,KAAO,IAAIO,KAAKa,OAAOxB,KAAKC,SAAWmB,KAAKC,IAAI,GAAI,GAAKrB,KAAKC,QAAQqB,QAAU,EAAI,GAAKtB,KAAKC,QAAQqB,OAAS,IAGxH,IAAII,MAAM,gDAGlB,CAAAnB,IAAA,YAAAC,MAQA,WACI,IAAII,EAAaC,OAAOC,UAAUC,SAASC,KAAKhB,KAAKF,MACrDE,KAAKG,MAAQH,KAAKC,QACC,kBAAfW,GACAZ,KAAKI,KAAOJ,KAAKF,KACjBmB,QAAQC,IAAI,4CAAelB,KAAKF,KAAKqB,WAAYnB,KAAKI,OAChC,oBAAfQ,EACPZ,KAAKI,KAAO,IAAIO,KAAKX,KAAKF,KAAOsB,KAAKC,IAAI,GAAI,GAAKrB,KAAKF,KAAKiB,WAAWO,QAAU,EAAI,GAAKtB,KAAKF,KAAKiB,WAAWO,OAAS,IACnG,oBAAfV,EACHW,MAAMC,OAAOxB,KAAKF,OAEtB,IAAI4B,MAAM,0DAEN1B,KAAKI,KAAO,IAAIO,KAAKa,OAAOxB,KAAKF,MAAQsB,KAAKC,IAAI,GAAI,GAAKrB,KAAKF,KAAKwB,QAAU,EAAI,GAAKtB,KAAKF,KAAKwB,OAAS,IAG/G,IAAII,MAAM,gDAEjB,CAAAnB,IAAA,SAAAC,MAGD,SAAOmB,GAWH,OADAV,QAAQC,IAAI,yDAAuBlB,KAAS,MACrC,2DAAgB2B,IAK3B,CAAApB,IAAA,KAAAC,MAQA,WACqBR,KAATI,KACR,OAAOJ,KAAKI,KAAOJ,KAAKI,KAAKe,WAAa,EAAI,KAElD,CAAAZ,IAAA,KAAAC,MAQA,WACqBR,KAATI,KACR,OAAOJ,KAAKI,KAAOJ,KAAKI,KAAKwB,UAAY,KAE7C,CAAArB,IAAA,KAAAC,MAQA,WACqBR,KAATI,KACR,OAAOJ,KAAKI,KAAOJ,KAAKI,KAAKyB,WAAa,KAE9C,CAAAtB,IAAA,KAAAC,MAQA,WACqBR,KAATI,KACR,OAAOJ,KAAKI,KAAOJ,KAAKI,KAAK0B,aAAe,KAEhD,CAAAvB,IAAA,KAAAC,MAQA,WACqBR,KAATI,KACR,OAAOJ,KAAKI,KAAOJ,KAAKI,KAAK2B,aAAe,KAEhD,CAAAxB,IAAA,KAAAC,MAQA,WACqBR,KAATI,KACR,OAAOJ,KAAKI,KAAOgB,KAAKY,OAAOhC,KAAKI,KAAKe,WAAa,GAAK,GAAK,KAEpE,CAAAZ,IAAA,KAAAC,MAQA,WACqBR,KAATI,KACR,OAAOJ,KAAKI,KAAOJ,KAAKI,KAAK6B,kBAAoB,OACpDrC,EAxL0B,G,OC6FhBsC,MAhGf,WAGe,IAAItC,EAAW,QAAS,YAAYC,OAAO,OACxC,IAAID,EAAW,YAAYC,OAAO,OAC9B,IAAID,EAAW,IAAIe,MAAQd,OAAO,OAChC,IAAID,EAAW,cAAcC,OAAO,OAClC,IAAID,EAAW,iBAAiBC,OAAO,OAC7DsC,IAAMC,WAAU,WAQZ,OAPAC,IAAQC,MAAK,SAACC,GAEV,OADAtB,QAAQC,IAAI,eAAWqB,GAChBA,EAAM,OACdD,MAAK,SAACC,GAEL,OADAtB,QAAQC,IAAI,eAAWqB,GAChBA,EAAM,OAEV,eACR,IACH,IAAMF,EAAQ,WACV,OAAO,IAAIG,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACP,OAAOF,EAAQ,OAChB,SAeX,OACIG,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAMhBC,cAAA,UAYAH,eAACI,IAAa,CAAAF,SAAA,CACVF,eAAA,OAAAE,SAAA,CACIC,cAACE,IAAO,CAACC,GAAG,IAAGJ,SAAC,iBAChBC,cAACE,IAAO,CAACC,GAAG,KAAIJ,SAAC,iBACjBC,cAACE,IAAO,CAACC,GAAG,KAAIJ,SAAC,oBAErBF,eAACO,IAAM,CAAAL,SAAA,CAMHC,cAACK,IAAK,CACFC,KAAK,IACLC,QAASP,cAAA,MAAAD,SAAI,WAEjBC,cAACK,IAAK,CACFC,KAAK,KACLC,QAASP,cAAA,MAAAD,SAAI,aAEjBC,cAACK,IAAK,CACFC,KAAK,KACLC,QAASP,cAAA,UAAQF,UAAU,UAAUU,QAAS,WAnD9DtC,QAAQC,IAAI,gBACZsC,MAAM,0BAA0B,CAC5BC,OAAQ,MACRC,YAAa,YACdpB,MAAK,SAACC,GAAG,OAAKA,EAAIoB,UAAQrB,MAAK,SAACC,GAC/BtB,QAAQC,IAAI,uCAAUqB,EAAK,OAAQA,EAAIqB,MAAQ,MAChD,SAAAC,GACC5C,QAAQC,IAAI,eAAM2C,OA4CyDf,SAAC,uBChFzEgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,SAAA2B,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACPzB,cAACZ,IAAMsC,WAAU,CAAA3B,SACfC,cAACb,EAAG,MAENwC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a388099.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/*\r\n * @Author: shenlilu\r\n * @Date: 2021-06-29 14:13:47\r\n * @LastEditors: shenlilu\r\n * @LastEditTime: 2021-07-02 13:52:06\r\n * @Description: 过滤时间 (对已有的时间对象处理)\r\n * @FilePath: \\new-demo\\src\\Components\\FilterTime.js\r\n */\r\n/**\r\n * @class FilterTime\r\n * @constructor\r\n * @param { String } event (必传) 传入时间格式字符串\r\n * @param { object | string } data 传入时间\r\n * @description 只传一个参数默认搞成时间戳返回\r\n * @author: sll\r\n * @todo: \r\n */\r\nexport default class FilterTime {\r\n    /**\r\n     * @function constructor\r\n    * 固定参数 忽略动态参数...props\r\n    * @param { String } event (必传) 传入时间格式字符串\r\n    * @param { object | string } data 传入时间 format\r\n    */\r\n    constructor(format, time) {\r\n        this.formats = format || ''\r\n        this.time = time || ''\r\n        this.isDate = true\r\n        this.$test = null\r\n        this.$day = null\r\n\r\n        this._init()\r\n        // console.log('FilterTime 类构造初始化完成 :>> ', format, time);\r\n    }\r\n    _init() {\r\n        if (this.formats && !this.time) {\r\n            this.parsing()\r\n        } else if (this.formats && this.time) {\r\n                this.transform()\r\n        } else {\r\n            this.$day = new Date()\r\n        }\r\n\r\n    }\r\n    /**\r\n    * @function parsing\r\n    * @description 解析时间值\r\n    * @param { String } event (必传) 传入时间格式字符串\r\n    * @param { object | string } data 传入时间\r\n    * @author: sll\r\n    * @todo: \r\n    */\r\n    parsing() {\r\n        let formatType = Object.prototype.toString.call(this.formats)\r\n        if (formatType === '[object Date]') {\r\n            this.$day = this.formats\r\n            console.log('可能是时间戳 :>> ', this.formats.getMonth(), this.$day);\r\n        } else if (formatType === '[object Number]') {\r\n            this.$day = new Date(this.formats * Math.pow(10, 13 - this.formats.toString().length >= 0 ? 13 - this.formats.toString().length : 0))\r\n        } else if (formatType === '[object String]') {\r\n            if (isNaN(Number(this.formats))) {\r\n                if (/(y+)/.test(this.formats)||/(M+)/.test(this.formats)||/(d+)/.test(this.formats)||/(h+)/.test(this.formats)) {\r\n                    this.$day = new Date(this.formats).toString()!=='Invalid Date'? new Date(this.formats): new Date()\r\n                } else {\r\n                    this.$day = new Date()\r\n                }\r\n            } else {\r\n                this.$day = new Date(Number(this.formats) * Math.pow(10, 13 - this.formats.length >= 0 ? 13 - this.formats.length : 0))\r\n            }\r\n        } else {\r\n            new Error('参数类型错误！')\r\n        }\r\n    }\r\n    /**\r\n     * @function transform\r\n     * @description 带格式的转化复值\r\n     * @param { String } event (必传) 传入时间格式字符串\r\n     * @param { object | string } data 传入时间\r\n     * @author: sll\r\n     * @todo: \r\n     */\r\n    transform() {\r\n        let formatType = Object.prototype.toString.call(this.time)\r\n        this.$test = this.formats\r\n        if (formatType === '[object Date]') {\r\n            this.$day = this.time\r\n            console.log('可能是时间戳 :>> ', this.time.getMonth(), this.$day);\r\n        } else if (formatType === '[object Number]') {\r\n            this.$day = new Date(this.time * Math.pow(10, 13 - this.time.toString().length >= 0 ? 13 - this.time.toString().length : 0))\r\n        } else if (formatType === '[object String]') {\r\n            if (isNaN(Number(this.time))) {\r\n                // this.$day = new Date()\r\n            new Error('时间格式错误错误！')\r\n            } else {\r\n                this.$day = new Date(Number(this.time) * Math.pow(10, 13 - this.time.length >= 0 ? 13 - this.time.length : 0))\r\n            }\r\n        } else {\r\n            new Error('参数类型错误！')\r\n        }\r\n    }\r\n\r\n\r\n    format(params) {\r\n        // let dateConfig = {\r\n        //     \"M+\": this.day ? this.day.getMonth() + 1 : '', //月份\r\n        //     \"d+\": this.day ? this.day.getDate() : '', //日\r\n        //     \"h+\": this.day ? this.day.getHours() : '', //小时\r\n        //     \"m+\": this.day ? this.day.getMinutes() : '', //分\r\n        //     \"s+\": this.day ? this.day.getSeconds() : '', //秒\r\n        //     \"q+\": this.day ? Math.floor((this.day.getMonth() + 3) / 3) : '', //季度\r\n        //     \"S\": this.day ? this.day.getMilliseconds() : '' //毫秒\r\n        // };\r\n        console.log('format 开始格式化时间 :>> ', this['MM']());\r\n        return '(╯‵□′)╯︵┻━┻' + params\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @function MM\r\n     * @description 时间过滤函数工具\r\n     * @param {*}\r\n     * @return {Numberumber}\r\n     * @author sll\r\n     * @todo \r\n     */\r\n    MM() {\r\n        const { $day } = this;\r\n        return this.$day ? this.$day.getMonth() + 1 : ''\r\n    }\r\n    /**\r\n     * @function dd\r\n     * @description 时间过滤函数工具\r\n     * @param {*}\r\n     * @return {Number}\r\n     * @author sll\r\n     * @todo \r\n     */\r\n    dd() {\r\n        const { $day } = this;\r\n        return this.$day ? this.$day.getDate() : ''\r\n    }\r\n    /**\r\n     * @function hh\r\n     * @description 时间过滤函数工具\r\n     * @param {*}\r\n     * @return {Number}\r\n     * @author sll\r\n     * @todo \r\n     */\r\n    hh() {\r\n        const { $day } = this;\r\n        return this.$day ? this.$day.getHours() : ''\r\n    }\r\n    /**\r\n     * @function mm\r\n     * @description 时间过滤函数工具\r\n     * @param {*}\r\n     * @return {Number}\r\n     * @author sll\r\n     * @todo \r\n     */\r\n    mm() {\r\n        const { $day } = this;\r\n        return this.$day ? this.$day.getMinutes() : ''\r\n    }\r\n    /**\r\n     * @function ss\r\n     * @description 时间过滤函数工具\r\n     * @param {*}\r\n     * @return {Number}\r\n     * @author sll\r\n     * @todo \r\n     */\r\n    ss() {\r\n        const { $day } = this;\r\n        return this.$day ? this.$day.getSeconds() : ''\r\n    }\r\n    /**\r\n     * @function qq\r\n     * @description 时间过滤函数工具\r\n     * @param {*}\r\n     * @return {Number}\r\n     * @author sll\r\n     * @todo \r\n     */\r\n    qq() {\r\n        const { $day } = this;\r\n        return this.$day ? Math.floor((this.$day.getMonth() + 3) / 3) : ''\r\n    }\r\n    /**\r\n     * @function SS\r\n     * @description 时间过滤函数工具\r\n     * @param {*}\r\n     * @return {Number}\r\n     * @author sll\r\n     * @todo \r\n     */\r\n    SS() {\r\n        const { $day } = this;\r\n        return this.$day ? this.$day.getMilliseconds() : ''\r\n    }\r\n}","/*\n * @Author: your name\n * @Date: 2021-05-06 16:09:18\n * @LastEditTime: 2023-04-13 19:49:06\n * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\n * @Description: In User Settings Edit\n * @FilePath: \\new-demo\\src\\App.js\n */\nimport React from 'react'\nimport { HashRouter, BrowserRouter, Routes, Route, Router, Redirect, Link, NavLink, useLocation, } from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport FilterTime from './Components/FilterTime'\n\nfunction App() {\n    // 时间\n    // const [time, settime] = React.useState('');\n    let time = new FilterTime('MM-dd', 1624587451).format('233')\n    let cuotime = new FilterTime(1624587452).format('233')\n    let newDatetime = new FilterTime(new Date()).format('233')\n    let srtingcuotime = new FilterTime('1624587453').format('233')\n    let srtingcuotime10 = new FilterTime('1624587453963').format('233')\n    React.useEffect(() => {\n        ooooo().then((res) => {\n            console.log('1层 :>> ', res);\n            return res + '2'\n        }).then((res) => {\n            console.log('2层 :>> ', res);\n            return res + '2'\n        })\n        return () => { }\n    }, [])\n    const ooooo = () => {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                return resolve('1');\n            }, 1000);\n        })\n    }\n    function getq() {\n\n        console.log('点击')\n        fetch('http://127.0.0.1:9000/q',{\n            method: 'get',\n            credentials: 'include'\n        }).then((res) => res.json()).then((res) => {\n            console.log('前端请求成功', res, 'data', res.data || 2)\n        }, err => {\n            console.log('报错', err)\n        })\n    }\n    return (\n        <div className=\"App\">\n            {/* <h1>QAQ</h1>\n            <h1>{time}</h1>\n            <h1>{cuotime}</h1>\n            <h1>{newDatetime}</h1>\n            <h1>{srtingcuotime}</h1> */}\n            <nav>\n                {/* <NavLink to=\"/\">首页</NavLink>\n                <NavLink to=\"/q\">产品</NavLink>\n                <NavLink to=\"/w\">关于</NavLink> */}\n            </nav>\n            {/* <BrowserRouter>\n                <Routes>\n                    <Route path=\"/\" element={<App />} />\n                    <Route path=\"/expenses\" element={<Expenses />} />\n                    <Route path=\"/invoices\" element={<Invoices />} />\n                </Routes>\n            </BrowserRouter> */}\n            <BrowserRouter >\n                <nav>\n                    <NavLink to=\"/\">首页</NavLink>\n                    <NavLink to=\"/q\">产品</NavLink>\n                    <NavLink to=\"/w\">关于</NavLink>\n                </nav>\n                <Routes>\n                    {/* {config.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))} */}\n                    {/* <Redirect exact from=\"/\" to=\"/Business\" key=\"indexs\" /> */}\n                    {/* {RouterWindow(config)} */}\n                    <Route\n                        path='/'\n                        element={<h3>1111</h3>}\n                    />\n                    <Route\n                        path='/q'\n                        element={<h3>qqqqqq</h3>}\n                    />\n                    <Route\n                        path='/w'\n                        element={<button className='red-btn' onClick={() => { getq() }}>wwwwww</button>}\n                    />\n                </Routes>\n            </BrowserRouter>\n        </div>\n    );\n}\n\n// export default class App extends Component {\n//     render() {\n//         return (\n//             <div>\n\n//             </div>\n//         )\n//     }\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}